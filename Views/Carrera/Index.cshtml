@model IEnumerable<SistemaUniversidadv1._0.Models.CARRERA>

@{
    ViewBag.Title = "Carreras";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/index.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<style>
    .alert-success, .alert-danger {
        width: 300px;
        margin: 10px auto;
        text-align: center;
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1050;
    }
</style>

<div class="carrera-container">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            @TempData["Success"]
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }

    <div class="header">
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#crearCarreraModal">
            <i class="fa-solid fa-folder-plus"></i>
        </button>
    </div>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Carrera</th>
                <th>Estado</th>
                <th>Activar/Desactivar</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var carrera in Model)
            {
                <tr>
                    <td>@carrera.nombre_carrera</td>
                    <td>@(carrera.estado_carrera ? "Activo" : "Inactivo")</td>
                    <td>
                        @if (carrera.estado_carrera)
                        {
                            <!-- Botón para desactivar carrera si está activa -->
                            <a href="@Url.Action("DesactivarCarrera", "Carrera", new { id = carrera.id_carrera })" class="btn btn-secondary">
                                Desactivar
                            </a>
                        }
                        else
                        {
                            <!-- Botón para activar carrera si está inactiva -->
                            <a href="@Url.Action("ActivarCarrera", "Carrera", new { id = carrera.id_carrera })" class="btn btn-success">
                                Activar
                            </a>
                        }
                    </td>
                    <td>
                        <a href="javascript:void(0);"
                           class="btn btn-sm btn-warning"
                           data-bs-toggle="modal"
                           data-bs-target="#editarCarreraModal"
                           data-id_carrera="@carrera.id_carrera"
                           data-nombre_carrera="@carrera.nombre_carrera"
                           data-estado_carrera="@carrera.estado_carrera.ToString().ToLower()">
                            <i class="fa-solid fa-pen"></i>
                        </a>
                        <a href="javascript:void(0);" class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#eliminarCarreraModal"
                           data-id_carrera="@carrera.id_carrera" data-nombre_carrera="@carrera.nombre_carrera">
                            <i class="fa-solid fa-trash"></i>
                        </a>
                    </td>
                </tr>

            }
        </tbody>
    </table>
</div>

<!-- Modal para Crear Carrera -->
<div class="modal fade" id="crearCarreraModal" tabindex="-1" aria-labelledby="crearCarreraModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="crearCarreraModalLabel">Agregar Nueva Carrera</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CrearCarrera", "Carrera", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        @Html.Label("Nombre de la Carrera", htmlAttributes: new { @class = "form-label" })
                        @Html.TextBox("nombre_carrera", null, new { @class = "form-control", placeholder = "Ingrese Carrera", required = "required" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Estado de la Carrera</label>
                        <select name="estado_carrera" class="form-control" required>
                            <option value="">Seleccione estado</option>
                            <option value="true">Activo</option>
                            <option value="false">Inactivo</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-success">Guardar</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal para Editar Carrera -->
<div class="modal fade" id="editarCarreraModal" tabindex="-1" aria-labelledby="editarCarreraModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="editarCarreraModalLabel">Editar Carrera</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("EditarCarrera", "Carrera", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="edit_id_carrera" name="id_carrera" />
                    <div class="mb-3">
                        @Html.Label("Nombre de la Carrera", htmlAttributes: new { @class = "form-label" })
                        @Html.TextBox("nombre_carrera", null, new { @class = "form-control", id = "editar_nombre_carrera", placeholder = "Ingrese Carrera", required = "required" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Estado de la Carrera</label>
                        <select name="estado_carrera" id="editar_estado_carrera" class="form-control" required>
                            <option value="">Seleccione estado</option>
                            <option value="true">Activo</option>
                            <option value="false">Inactivo</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-warning">Actualizar</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<!-- Modal para Eliminar Carrera -->
<div class="modal fade" id="eliminarCarreraModal" tabindex="-1" aria-labelledby="eliminarCarreraModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="eliminarCarreraModalLabel">Eliminar Carrera</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <div id="mensaje-eliminacion">
                    ¿Desea eliminar la Carrera <strong id="nombre_carrera"></strong>?
                </div>
                <div id="mensaje-error" class="text-danger" style="display:none;">
                    No se puede eliminar esta carrera porque tiene estudiantes inscritos.
                </div>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("EliminarCarrera", "Carrera", FormMethod.Post, new { id = "form-eliminar-carrera" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="id_carrera" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" id="btn-eliminar" class="btn btn-danger" disabled>Eliminar</button>
                }
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            // Función para manejar la desaparición de las alertas automáticamente.
            function handleAlerts() {
                var alerts = $('.alert'); // Selecciona todas las alertas presentes en la página.
                if (alerts.length > 0) { // Si existen alertas:
                    setTimeout(function () { // Configura un temporizador:
                        alerts.fadeOut('slow'); // Desvanece las alertas lentamente.
                    }, 1000); // Tiempo de espera antes de desvanecer (1 segundo).
                }
            }

            // Llama a la función de manejo de alertas al cargar la página.
            handleAlerts(); // Asegura que cualquier alerta visible se desvanezca automáticamente.

            // Evento para mostrar el modal de eliminar carrera.
            $('#eliminarCarreraModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Obtiene el botón que activó el modal.
                var id_carrera = button.data('id_carrera'); // Extrae el ID de la carrera del atributo `data-id_carrera`.
                var nombre_carrera = button.data('nombre_carrera'); // Extrae el nombre de la carrera del atributo `data-nombre_carrera`.
                var modal = $(this); // Hace referencia al modal que se está mostrando.

                // Configura los valores en el modal.
                modal.find('.modal-body #nombre_carrera').text(nombre_carrera); // Establece el nombre de la carrera en el modal.
                modal.find('.modal-footer #id_carrera').val(id_carrera); // Establece el ID de la carrera en un campo oculto.

                // Oculta cualquier mensaje de error previo.
                modal.find('#mensaje-error').hide(); // Asegura que el mensaje de error no sea visible.
                modal.find('#mensaje-eliminacion').show(); // Muestra el mensaje de confirmación de eliminación.
                modal.find('#btn-eliminar').prop('disabled', false); // Habilita el botón de eliminar.

                // Verifica si la carrera tiene estudiantes asociados.
                $.getJSON('/Carrera/VerificarEstudiantesEnCarrera', { id_carrera: id_carrera }, function (tieneEstudiantes) {
                    if (tieneEstudiantes) { // Si hay estudiantes asociados:
                        modal.find('#mensaje-eliminacion').hide(); // Oculta el mensaje de confirmación.
                        modal.find('#mensaje-error').show(); // Muestra el mensaje de error indicando que no se puede eliminar.
                        modal.find('#btn-eliminar').prop('disabled', true); // Deshabilita el botón de eliminar.
                    }
                });
            });
        });
    </script>
}

