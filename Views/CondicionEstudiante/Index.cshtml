@model SistemaUniversidadv1._0.Models.ViewModels.CondicionEstudianteViewModel


@{
    ViewBag.Title = "Condiciones de Estudiante";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<div class="container my-5">


    <div class="d-flex justify-content-end mb-3">
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#crearCondicionModal">
            <i class="fa-solid fa-folder-plus"></i>
        </button>
    </div>

    <!-- Mostrar mensajes de TempData si existen -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" id="successMessage">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }


    <table class="table table-hover">
        <thead>
            <tr>
                <th>Nombre Condición</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var condicion in Model.Condiciones)
            {
                <tr>
                    <td>@condicion.nombre_condicion_estudiante</td>
                    <td>@(condicion.estado ? "Activo" : "Inactivo")</td>
                    <td>
                        <!-- Botón para eliminar condición -->
                        <button type="button" class="btn btn-danger"
                                data-bs-toggle="modal" data-bs-target="#eliminarCondicionModal"
                                data-id="@condicion.id_condicion_estudiante">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div class="modal fade" id="crearCondicionModal" tabindex="-1" aria-labelledby="crearCondicionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="crearCondicionModalLabel">Agregar Condición</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CrearCondicionEstudiante", "CondicionEstudiante", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        @Html.LabelFor(m => m.NuevaCondicion.nombre_condicion_estudiante, "Nombre de la Condición", new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.NuevaCondicion.nombre_condicion_estudiante, new { @class = "form-control", placeholder = "Ingrese el nombre" })
                        @Html.ValidationMessageFor(m => m.NuevaCondicion.nombre_condicion_estudiante, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(m => m.NuevaCondicion.estado, "Estado", new { @class = "form-label" })
                        @Html.DropDownListFor(
                                                                             m => m.NuevaCondicion.estado,
                                                                             new SelectList(new[]
                                                                             {
            new { Value = "true", Text = "Activo" },
            new { Value = "false", Text = "Inactivo" }
}, "Value", "Text"),
                                                                             "Seleccione un estado",
                                                                             new { @class = "form-select" }
                                                                         )
                        @Html.ValidationMessageFor(m => m.NuevaCondicion.estado, "", new { @class = "text-danger" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>

                }
            </div>
        </div>
    </div>
</div>


<!-- Modal de eliminación de condición -->
<div class="modal fade" id="eliminarCondicionModal" tabindex="-1" aria-labelledby="eliminarCondicionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eliminarCondicionModalLabel">Eliminar Condición</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro que desea eliminar esta condición?
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("EliminarCondicionEstudiante", "CondicionEstudiante", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="id-condicion-eliminar" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                }
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        // Limpiar el formulario cuando se abre el modal de crear condición
        $('#crearCondicionModal').on('show.bs.modal', function () {
            $('#NuevaCondicion_nombre_condicion_estudiante').val('');
            $('#NuevaCondicion_estado').val('');
            $('#crearCondicionModal form').find('.text-danger').text(''); // Limpiar mensajes de validación
        });

        // Validación en el cliente al enviar el formulario de creación
        $('#crearCondicionModal form').on('submit', function (e) {
            var nombreCondicion = $('#NuevaCondicion_nombre_condicion_estudiante').val().trim();
            var estado = $('#NuevaCondicion_estado').val();

            if (!nombreCondicion) {
                alert('Por favor, ingrese un nombre para la condición.');
                e.preventDefault();
                return false;
            }

            if (estado === '') {
                alert('Por favor, seleccione un estado.');
                e.preventDefault();
                return false;
            }
        });

        // Capturar el ID de la condición en el modal de eliminación
        $('#eliminarCondicionModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Botón que abrió el modal
            var idCondicion = button.data('id'); // Obtener ID del atributo data-id
            $('#id-condicion-eliminar').val(idCondicion); // Pasar el ID al input oculto
        });

        // Validar antes de enviar el formulario de eliminación
        $('#eliminarCondicionModal form').on('submit', function (e) {
            var idCondicion = $('#id-condicion-eliminar').val();
            if (!idCondicion) {
                alert('Hubo un problema al procesar la solicitud. Inténtelo nuevamente.');
                e.preventDefault();
                return false;
            }
        });

        setTimeout(function () {
            // Si el mensaje de éxito existe, lo ocultamos
            $('.alert-success').fadeOut(500); // Usamos la clase en lugar del ID

            // Si el mensaje de error existe, lo ocultamos
            $('.alert-danger').fadeOut(500); // Usamos la clase para ocultar los mensajes de error
        }, 3000);
    });
</script>

